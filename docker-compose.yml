services:
  prstgres:
    image: postgres:latest
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_NON_ROOT_USER: ${POSTGRES_NON_ROOT_USER}
      POSTGRES_NON_ROOT_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - n8n_postgres_data:/var/lib/postgresql/data
    networks:
      - n8n_network

  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    ports:
      - "${N8N_PORT}:5678"
    environment:
      # Database connection
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: prstgres
      DB_POSTGRESDB_PORT: ${POSTGRES_PORT}
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      # Authentication
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_RUNNERS_ENABLED: true
      # Host configuration
      N8N_HOSTJ: ${N8N_HOST:-localhost}
      N8N_PORT: ${N8N_PORT:-5678}
      WEBHOOK_URL: ${NGROK_PUBLIC_URL:-http://localhost:5678}
      # Execution settings
      GENERIC_TIMEZONE: ${TIMEZONE}
      TZ: ${TIMEZONE}
    depends_on:
      - prstgres
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n_network
  
  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    ports:
      - "${NGROK_PORT}:4040"
    command:
      - "http"
      - "http://host.docker.internal:5678"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    networks:
      - n8n_network

networks:
  n8n_network:
    name: n8n_network
    driver: bridge

volumes:
  n8n_postgres_data:
    name: n8n_public_postgres_data
  n8n_data:
    name: n8n_public_data